- name: check if openstack is reachable
  shell: curl -k {% if current_lifecycle_env.osp_use_tls %}https{% else %}http{% endif %}://{{ hostvars['openstack'].vm_nics[0].ip }}/ || true
  register: openstack_response
  changed_when: false
  delegate_to: "{{ infrastructure_delegate_host_used_to_test_if_layer2_host_is_available }}"

- block:
    - block:
       - include: instantiate_vm.yml
       - include: allocate_floating_ip.yml
      when: mode=="create"

    - block:
       - include: set_floating_ip_as_fact.yml
       - name: wait for vm to become available
         local_action: wait_for host={{ ansible_host }} port=22 timeout=600
         when: vm_exists
       - name: wait for subscription to finish
         shell: subscription-manager status | awk '/^Overall Status/{ print $3 }'
         register: subscription_status
         until: subscription_status.stdout == 'Current' or subscription_status.stdout == 'Insufficient'
         failed_when: subscription_status.stdout == ''
         changed_when: false
         retries: 30
         delay: 20
         when: vm_exists
      when: mode=="create" or mode=="readfacts"

    - block:
        - include: set_floating_ip_as_fact.yml
        - include: remove_floating_ip.yml
          when: vm_exists
        - include: terminate_vm.yml
          when: vm_exists
      when: mode=="destroy"
  when: openstack_response.stdout|length > 0

- set_fact:
    vm_exists: false
  when: openstack_response.stdout|length == 0 
