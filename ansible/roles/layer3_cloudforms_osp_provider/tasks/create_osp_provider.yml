- block:
    - name: retrieve undercloud admin password
      command: hiera admin_password
      register: undercloud_password
      failed_when: undercloud_password.stdout == ""
      changed_when: false
    # - name: retrieve overcloud admin password
    #   command: awk -F = '/OS_PASSWORD/{ print $2 }' ~stack/overcloudrc
    #   register: overcloud_password
    #   failed_when: overcloud_password.stdout == ""
    #   changed_when: false
    # - name: retrieve overcloud amqp username/password
    #   command: awk -F \" '/default_/{ print $2 }' /etc/rabbitmq/rabbitmq.config
    #   register: undercloud_amqp_usernamepw
    #   failed_when: undercloud_amqp_usernamepw.stdout == ""
    #   changed_when: false
    - name: retrieve root user private key (and remove delimiter and newlines)
      shell: awk '!/---/{ printf "%s",$0 }' ~/.ssh/id_rsa
      register: stack_user_priv_key
      failed_when: stack_user_priv_key.stdout == ""
      changed_when: false
    - name: retrieve hailstorm domain id
      shell: >
        . ~/overcloudrc_v3 &&
        openstack domain show hailstorm -c id -f value
      register: hailstorm_domain_id
      failed_when: hailstorm_domain_id.stdout == ""
      changed_when: false
      become: yes
      become_user: "{{ hostvars['rhosp-director'].rhosp_stack_user }}"
  delegate_to: rhosp-director
- name: create osp provider
  shell: curl -k -u admin:{{ root_password }} -XPOST -d'{{ lookup('template', 'osp_provider.json.j2') | to_json }}' https://{{ vm_nics[0].ip }}/api/providers
  register: osp_provider
  with_items:
    - type: "ManageIQ::Providers::Openstack::CloudManager"
      name: "RHOSP Overcloud"
      ip: "{{ hostvars['openstack'].vm_nics[0].ip }}"
      host: "{{ hostvars['openstack'].hostname }}"
      admin_name: "cfme-bind-user"
      admin_password: "{{ root_password }}"
      api_version: "v3"
      domain_id: "{{ hailstorm_domain_id.stdout }}"
    - type: "ManageIQ::Providers::Openstack::InfraManager"
      name: "RHOSP Undercloud"
      ip: "{{ hostvars['rhosp-director'].vm_nics[0].ip }}"
      host: "{{ hostvars['rhosp-director'].hostname }}"
      admin_name: "admin"
      admin_password: "{{ undercloud_password.stdout }}"
      #metrics_username: "{{ undercloud_amqp_usernamepw.stdout_lines[0] }}"
      #metrics_password: "{{ undercloud_amqp_usernamepw.stdout_lines[1] }}"
      stack_user_name: "root"
      stack_user_ssh_priv_key: "{{ stack_user_priv_key.stdout }}"
      api_version: "v2"
- debug: var=osp_provider
