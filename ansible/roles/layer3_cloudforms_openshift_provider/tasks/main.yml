- block:
    - block:
      # create service account
        - name: check management-infra project
          command: "oc get project {{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }}"
          failed_when: false
          changed_when: false
          register: ose_project
        - name: Create management-infra project
          command: oc new-project {{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }} --description="Management Infrastructure"
          when: ose_project.stdout == ""
        - name: check management-admin service account
          command: "oc get sa {{ hostvars[groups['ose3-installer'][0]].ose_cfme_serviceaccount_name }} -n {{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }}"
          failed_when: false
          changed_when: false
          register: ose_serviceaccount
        - block:
          - name: Create cfme service account
            shell: "echo '{\"apiVersion\": \"v1\",\"kind\": \"ServiceAccount\",\"metadata\": {\"name\": \"{{ hostvars[groups['ose3-installer'][0]].ose_cfme_serviceaccount_name }}\"} }' | oc create -f - -n {{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }}"
          when: ose_serviceaccount.stdout == ""
        - name: Give the cfme service account cluster-admin role.
          command: "oadm policy add-cluster-role-to-user cluster-admin system:serviceaccount:{{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }}:{{ hostvars[groups['ose3-installer'][0]].ose_cfme_serviceaccount_name }}"

      # retrieve service account token
        - name: retrieve cfme serviceaccount token name
          shell: "oc get sa {{ hostvars[groups['ose3-installer'][0]].ose_cfme_serviceaccount_name }} -n {{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }} -o yaml | awk '/- name:.*token.*/{ print $3 }'"
          register: token_name
          failed_when: token_name.stdout == ""
          changed_when: false
        - name: retrieve cfme serviceaccount token
          shell: "oc describe secret {{ token_name.stdout }} -n {{ hostvars[groups['ose3-installer'][0]].ose_management_infra_project }} | awk '/token:/{ print $2 }'"
          register: token_contents
          failed_when: token_contents.stdout == ""
          changed_when: false
        - name: store cfme serviceaccount token as fact
          set_fact:
            ose_cmfe_token: "{{ token_contents.stdout }}"
      delegate_to: "{{ groups['ose3-installer'][0] }}"


#    - local_action: template src=ose_provider_new.json.j2 dest=/tmp/ose_provider.json
    - name: create ose providers
      shell: curl -k -u admin:{{ root_password }} -XPOST -d'{{ lookup('template', 'ose_provider_new.json.j2') | to_json }}' https://{{ vm_nics[0].ip }}/api/providers
      register: ose_provider
    - debug: var=ose_provider
  when: mode=="create"
