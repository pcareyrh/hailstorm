---
# - hosts: all
#   remote_user: root
#   gather_facts: false
#   tasks:
#     - set_fact:
#         rhsm_username: "{{ rhsm_username }}"
#         rhsm_password: "{{ rhsm_password }}"
#       tags:
#         - always
#     - debug: var=vm_nics
#       tags:
#         - always
#     # - debug: msg={{ vm_nics }}
#     #   tags:
#     #     - always
#
#   vars_prompt:
#     - name: "rhsm_username"
#       prompt: "what is your Red Hat Subscription Manager username?"
#       default: "wrichter"
#       private: no
#     - name: "rhsm_password"
#       prompt: "what is your Red Hat Subscription Manager password?"


#### SATELLITE ####
# refresh subscription to include the "guests of"... subscriptions
- hosts: satellite
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_satellite, tags: [ 'layer2', 'satellite' ], mode: refresh_subscriptions }


#### CLOUDFORMS ####

- hosts: cloudforms
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer3_cloudforms_rhev_template, tags: [ 'layer3', 'cf', 'cf-template' ], mode: create }
    - { role: layer3_vm_on_rhev, tags: [ 'layer3', 'cf', 'vm', 'cf-vm' ], mode: create }
    - { role: layer2_rhel_reconfigure_dns, tags: [ 'layer3', 'cf', 'dns', 'cf-dns' ], mode: create, nameserver: "{{ hostvars['ipa'].vm_nics[0].ip }}" }
    - { role: layer3_cloudforms_config, tags: [ 'layer3', 'cf', 'cf-config' ], mode: create }
# RHEL after cloudforms config, to ensure the hostname is set before subscribing
    - { role: layer2_rhel, tags: [ 'layer3', 'cf', 'rhel', 'cf-rhel'], mode: create }
    - { role: layer2_tdagent, tags: [ 'layer3', 'cf', 'tdagent', 'cf-tdagent'], mode: create }
    - { role: layer2_ipa_certificate, tags: ['layer2', 'cf', 'cf-certificate'], mode: create }
    - { role: layer3_cloudforms_certificate, tags: ['layer2', 'cf', 'cf-certificate'], mode: create }
    - { role: layer3_cloudforms_osp_provider, tags: [ 'layer3', 'cf', 'cf-provider', 'cf-provider-osp' ], mode: create }
    - { role: layer3_cloudforms_tower_provider, tags: [ 'layer3', 'cf', 'cf-provider', 'cf-provider-tower' ], mode: create }
    - { role: layer3_cloudforms_rhev_provider, tags: [ 'layer3', 'cf', 'cf-provider', 'cf-provider-rhev' ], mode: create }
    - { role: layer3_cloudforms_openshift_provider, tags: [ 'layer3', 'cf','cf-provider', 'cf-provider-ocp' ], mode: create }


#### EFK ####

- hosts: efk
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_vms, tags: [ 'layer2', 'efk', 'vm' ], mode: create }
    - { role: layer2_rhel_reconfigure_dns, tags: [ 'layer2', 'efk', 'dns' ], mode: create, nameserver: "{{ hostvars['ipa'].vm_nics[0].ip }}" }
    - { role: layer2_rhel, tags: [ 'layer2', 'efk', 'rhel'], mode: create }
    - { role: layer2_efk_rhosp_optools, tags: [ 'layer2', 'efk', 'efk-install'], mode: create, when: "current_lifecycle_env.openstack_version < 10" }
    - { role: layer2_ipa_certificate, tags: ['layer2', 'efk', 'efk-certificate'], mode: create, when: "current_lifecycle_env.openstack_version >= 10" }
    - { role: layer2_efk_centos_opstools, tags: [ 'layer2', 'efk', 'efk-install'], mode: create, when: "current_lifecycle_env.openstack_version >= 10" }

#### TOWER ####

- hosts: ansible-jump-host
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer3_vm_on_openstack, tags: [ 'layer3', 'vm', 'tower', 'tower-inventory-l3', 'tower-inventory-l3-openstack', 'vm'], mode: create }
    - { role: layer2_rhel, tags: [ 'layer3', 'tower', 'rhel', 'tower-inventory-l3', 'tower-inventory-l3-openstack', 'rhel'], mode: create, when: "vm_exists is defined and vm_exists == true"}


- hosts: tower
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_ansibletower_l3inventory, tags: [ 'layer2', 'tower', 'tower-inventory-l3', 'tower-inventory-l3-cloudforms' ], mode: create, kind: "cloudforms", inventoryname: "Hailstorm", groupname: "CloudForms", credentialname: "Hailstorm L3 SSH", cloud_credentials: {"username":"admin", "password":"{{ root_password }}", "url":"https://cloudforms.{{ hailstorm_dns_domain }}"} }
    - { role: layer2_ansibletower_l3inventory, tags: [ 'layer2', 'tower', 'tower-inventory-l3', 'tower-inventory-l3-openstack' ], mode: create, kind: "openstack", inventoryname: "Hailstorm", groupname: "OpenStack", credentialname: "Hailstorm L3 SSH", cloud_credentials: {"username":"admin", "password":"{{ root_password }}", "url":"http://openstack.{{ hailstorm_dns_domain }}:5000/v3", "project": "demo-vms", "domain": "hailstorm"}, "jumphost": "{{ hostvars['ansible-jump-demo-vms'].ansible_host }}" }
#    - { role: layer2_ansibletower_inventory, tags: [ 'layer2', 'tower', 'tower-openstack' ], mode: create, kind: "openstack", inventoryname: "Hailstorm L3", groupname: "OpenStack Infra-VMs", cloud_credentials: {"username":"admin", "password":"{{ root_password }}", "url":"http://openstack.{{ hailstorm_dns_domain }}:5000/v3", "project": "demo-infra", "domain": "hailstorm"}, "jumphost": "{{ hostvars['ansible-jump-demo-infra'].ansible_host }}" }
